name: Android CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK 17
        uses: actions/setup-java@v3.13.0
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 'Get sdkVersion from versions.toml'
        id: read_sdkVersion
        shell: bash
        run: |
          version=`perl -nlE 'say if s/compileSdkVersion \= \"(.*)\"/$1/g' gradle/libs.versions.toml`
          echo "sdkVersion=$version" >> $GITHUB_OUTPUT

      - name: 'Get buildToolsVersion from versions.toml'
        id: read_buildToolsVersion
        shell: bash
        run: |
          version=`perl -nlE 'say if s/buildToolsVersion \= \"(.*)\"/$1/g' gradle/libs.versions.toml`
          echo "buildToolsVersion=$version" >> $GITHUB_OUTPUT

      - name: 'Get cmakeVersion from versions.toml'
        id: read_cmakeVersion
        shell: bash
        run: |
          version=`perl -nlE 'say if s/cmakeVersion \= \"(.*)\"/$1/g' gradle/libs.versions.toml`
          echo "cmakeVersion=$version" >> $GITHUB_OUTPUT

      - name: 'Get ndkVersion from versions.toml'
        id: read_ndkVersion
        shell: bash
        run: |
          version=`perl -nlE 'say if s/ndkVersion \= \"(.*)\"/$1/g' gradle/libs.versions.toml`
          echo "ndkVersion=$version" >> $GITHUB_OUTPUT
            
      - name: Setup Android SDK
        uses: amyu/setup-android@v4
        with:
          sdk-version: ${{ steps.read_sdkVersion.outputs.sdkVersion }}
          build-tools-version: ${{ steps.read_buildToolsVersion.outputs.buildToolsVersion }}
          cmake-version: ${{ steps.read_cmakeVersion.outputs.cmakeVersion }}
          ndk-version: ${{ steps.read_ndkVersion.outputs.ndkVersion }}
          generate-job-summary: true

      - name: Accept Android SDK licenses
        run: yes | /usr/local/lib/android/sdk/tools/bin/sdkmanager --licenses
      
      - name: Give permission to executable
        run: chmod +x gradlew

      - name: Build debug
        run: ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error
